name: Test Suites for PR
on:
  pull_request:

jobs:
  static-analysis-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Restore Localstack Cache if it exists
        id: cache-docker-localstack
        uses: actions/cache@v3
        with:
          path: ci/cache/docker/localstack
          key: cache-docker-localstack

      - name: Update Localstack Image Cache if cache miss
        if: steps.cache-docker-localstack.outputs.cache-hit != 'true'
        run: docker pull localstack/localstack && mkdir -p ci/cache/docker/localstack && docker image save localstack/localstack --output ./ci/cache/docker/localstack/localstack.tar

      - name: Use LocalStack Image Cache if cache hit
        if: steps.cache-docker-localstack.outputs.cache-hit == 'true'
        run: docker image load --input ./ci/cache/docker/localstack/localstack.tar

      - name: Start LocalStack
        run: |
          pip install --upgrade pyopenssl
          pip install localstack awscli-local[ver1] # install LocalStack cli and awslocal
          localstack start -d                       # Start LocalStack in the background

          echo "Waiting for LocalStack startup..."  # Wait 30 seconds for the LocalStack container
          localstack wait -t 30                     # to become ready before timing out
          echo "Startup complete"
          cp test/localstack.tf .

      - name: Static Analysis Tests
        id: static-analysis-tests
        uses: ./.github/actions/tests_static_analysis
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          cache: true

      - name: Unit Tests
        working-directory: test
        run: go test -v -timeout 30m

      - name: Test with Go
        run: go test -json > TestResults.json

      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: Go-results
          path: TestResults.json
